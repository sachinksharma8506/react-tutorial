{"version":3,"sources":["logo.svg","component/ifelse.jsx","component/Conditional.jsx","App.js","reportWebVitals.js","index.js"],"names":["Ifelsecomp","useState","cityName","setCityName","filtercity","setFilterCity","arrCity","Condinal","map","item","index","className","type","value","onChange","event","target","city","filter","toLowerCase","includes","Conditional","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+LAAe,I,aCuCAA,EApCI,WACjB,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCF,mBAAS,IAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACMC,EAAU,CAAC,QAAS,QAAS,UAAW,YAQxCC,EAAW,WACf,MAAiB,KAAbL,EACQ,6BACHE,EAAWI,KAAI,SAACC,EAAMC,GACrB,OAAO,6BAAiBD,GAARC,QAMhB,gDAKZ,OACE,sBAAKC,UAAU,MAAf,UACI,mDACA,yEACA,uBAAOC,KAAK,OAAOC,MAAOX,EAAUY,SA1BtB,SAACC,GACnBZ,EAAYY,EAAMC,OAAOH,OACzB,IAAII,EAAOX,EAAQY,QAAO,SAACL,GAAD,OACxBA,EAAMM,cAAcC,SAASL,EAAMC,OAAOH,UAE5CR,EAAcY,MAsBV,cAACV,EAAD,QC5BOc,EAJK,WAChB,OAAQ,yC,MCWGC,MATf,WACE,OACE,sBAAKX,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCGSY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.2f3bc3a0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport { useState } from \"react\";\r\n\r\nconst Ifelsecomp = () => {\r\n  const [cityName, setCityName] = useState(\"\");\r\n  const [filtercity, setFilterCity] = useState([]);\r\n  const arrCity = [\"Delhi\", \"Noida\", \"Chennai\", \"Gurugram\"];\r\n  const eventChange = (event) => {\r\n    setCityName(event.target.value);\r\n    let city = arrCity.filter((value) =>\r\n      value.toLowerCase().includes(event.target.value)\r\n    );\r\n    setFilterCity(city);\r\n  }\r\n  const Condinal = () => {\r\n    if (cityName !== ''){\r\n        return (<ul>\r\n            {filtercity.map((item, index) => {\r\n              return <li key={index}>{item}</li>;\r\n            })}\r\n          </ul>);\r\n      }\r\n      else {\r\n          return (\r\n              <h2>Add something</h2>\r\n          )\r\n      }\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n        <h1>Hello CodeSandbox</h1>\r\n        <h2>Start editing to see some magic happen!</h2>\r\n        <input type=\"text\" value={cityName} onChange={eventChange} />\r\n        <Condinal />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Ifelsecomp;\r\n","import React from \"react\";\r\n\r\nconst Conditional = () => {\r\n    return (<h1>sachin</h1>);\r\n}\r\n\r\nexport default Conditional;","import logo from './logo.svg';\nimport IfelseComp from './component/ifelse'; \nimport Conditional from './component/Conditional';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <IfelseComp />\n      <Conditional/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}